# .gitlab-ci.yml  ─────────  MR‑only pipeline  ───────────────────────────────
stages:
  - build-backend
  - test-backend
  - build-frontend
  - test-frontend

workflow:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: always
    - when: never

variables:
  MAVEN_CLI_OPTS: "-B -e -V"
  NODE_ENV: "ci"

cache:
  key: "${CI_PROJECT_ID}"
  paths:
    - backend/.m2/repository/
    - frontend/node_modules/

# Uses official image that already bundles Maven 3.9.9 + Eclipse‑Temurin JDK 23
# https://hub.docker.com/_/maven  tag: 3.9.9-eclipse-temurin-23  :contentReference[oaicite:0]{index=0}
.build-backend-template: &build-backend-image
  image: maven:3.9.9-eclipse-temurin-23

build-backend:
  <<: *build-backend-image
  stage: build-backend
  script:
    - cd backend
    - mvn $MAVEN_CLI_OPTS clean package -DskipTests
  artifacts:
    paths:
      - backend/target/*.jar
    expire_in: 1 hour

test-backend:
  <<: *build-backend-image
  stage: test-backend
  script:
    - cd backend
    - mvn $MAVEN_CLI_OPTS test
  allow_failure: true
  artifacts:
    when: always
    reports:
      junit: backend/target/surefire-reports/*.xml

# ────────────── frontend ──────────────
# Official Node 23.11.0 image exists on Docker Hub  :contentReference[oaicite:1]{index=1}
# We pin npm to 10.9.2 explicitly, because Node 23 ships a slightly older npm.
.frontend-image: &frontend-image
  image: node:23.11.0-slim

build-frontend:
  <<: *frontend-image
  stage: build-frontend
  script:
    - cd frontend
    - npm install -g npm@10.9.2
    - npm ci
    - npm run build
  artifacts:
    paths:
      - frontend/dist/
    expire_in: 1 hour

test-frontend:
  <<: *frontend-image
  stage: test-frontend
  script:
    - cd frontend
    - npm install -g npm@10.9.2
    - npm ci
    - npm test -- --coverage
  allow_failure: true
  artifacts:
    when: always
    reports:
      junit: frontend/jest-results.xml
